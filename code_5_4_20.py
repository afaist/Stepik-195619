"""
    Социальные сети

В социальных сетях все как обычно: одни люди выкладывают посты, другие их
комментируют. Сервис по сбору аналитики решил найти у кого из владельцев постов
самое большое количество уникальных комментаторов. Ваша задача помочь им в этом
и собрать нужную информацию. Для это вам потребуется написать функцию
print_statistic, которая принимает список кортежей. Каждый кортеж состоит из
пары значений: автор поста и далее ник пользователя, оставившего комментарий к
этому посту. Комментаторы могут повторяться и комментировать разных авторов.

Функция print_statistic должна посчитать для каждого автора его уникальное
количество комментаторов. Исходя из найденного количества  определяется
популярность автора. Чем больше уникальных пользователей прокомментировало
автора, тем он считается популярнее. Затем функция print_statistic должна для
каждого автора вывести в порядке уменьшения популярности информацию в следующем
виде

"Количество уникальных комментаторов у <имя героя> - <количество
комментаторов>"

На склонение давайте не будем обращать внимание в этой задаче.

В случае одинаковой популярности у нескольких авторов, необходимо ранжировать
по алфавитному порядку имени авторов без учета регистра

"""


def print_statistic(list_of_tuples: list[tuple[str, str]]) -> None:
    dict = {}
    for item in list_of_tuples:
        dict.setdefault(item[0], set()).add(item[1])
    dict = {key: len(values) for key, values in dict.items()}
    sorted_dict = sorted(dict.items(), key=lambda x: (-x[1], x[0]))
    for item in sorted_dict:
        print(f"Количество уникальных комментаторов у {item[0]} - {item[1]}")


data = [
    ("karl", "zhanna777"),
    ("karl", "мама_игоречка_98"),
    ("qwerty03", "pushka76"),
    ("Billy", "мама_игоречка_98"),
    ("Billy", "pushka76"),
    ("qwerty03", "joebiden"),
    ("karl", "zhanna777"),
    ("karl", "joebiden"),
    ("karl", "pushka76"),
]

print_statistic(data)
