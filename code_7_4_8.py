"""
    Рекурсивный разворот списка

Встроенная функция reversed позволяет расположить элементы упорядоченной
коллекции в обратном порядке. Но работает данная функция только на первый
уровень вложенности. Это значит, что результатом следующей инструкции

print(list(reversed([[1, 2, 3], [4, 5], [6, 7, 8]])))

будет следующий список

[[6, 7, 8], [4, 5], [1, 2, 3]]

Порядок элементов на втором уровне не поменялся.

Ваша задача написать рекурсивную функцию reversed_recursive, которая принимает
на вход вложенный список произвольной вложенности и располагает все элементы на
каждом уровне в обратном направлении

Ваша задача только написать определение рекурсивной функции reversed_recursive
"""

from typing import Any

NestedList = list["Any | NestedList"]


def reversed_recursive(lst: NestedList) -> NestedList:
    """Рекурсивный разворот списка

    Args:
        lst: список произвольной вложенности

    Returns:
        список в обратном порядке
    """
    lst.reverse()
    for item in lst:
        if isinstance(item, list):
            reversed_recursive(item)
    return lst
